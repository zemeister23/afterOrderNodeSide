{"version":3,"sources":["../src/fetch.js"],"names":["InvalidJSONError","responseData","Error","FetchService","url","method","validateStatus","then","res","data","formData","req","runningInNode","axios","post","getBuffer","headers","getHeaders","maxContentLength","Infinity","maxBodyLength","maxDataSize","fetchService"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;;;;;AACJ,4BAAYC,YAAZ,EAA0B;AAAA;;AAAA,6BAClB,8FACA,kGADA,GAEAA,YAHkB;AAIzB;;;iCAL4BC,K;;IAQzBC,Y;;;;;;;WACJ,iBAASC,GAAT,EAAcC,MAAd,EAAsB;AACpB,aAAO,uBAAM;AACXA,QAAAA,MAAM,EAANA,MADW;AAEXD,QAAAA,GAAG,EAAHA,GAFW;AAGXE,QAAAA,cAAc,EAAE;AAAA,iBAAM,IAAN;AAAA;AAHL,OAAN,EAKNC,IALM,CAKD,UAAAC,GAAG,EAAI;AACX,YAAI,OAAOA,GAAG,CAACC,IAAX,KAAoB,QAAxB,EACE,MAAM,IAAIT,gBAAJ,CAAqBQ,GAAG,CAACC,IAAzB,CAAN;AACF,eAAOD,GAAG,CAACC,IAAX;AACD,OATM,CAAP;AAUD;;;WAED,oBAAYC,QAAZ,EAAsBN,GAAtB,EAA2B;AACzB,UAAIO,GAAJ;;AAEA,UAAIC,qBAAJ,EAAmB;AACjBD,QAAAA,GAAG,GAAGE,kBAAMC,IAAN,CAAWV,GAAX,EAAgBM,QAAQ,CAACK,SAAT,EAAhB,EAAsC;AAC1CC,UAAAA,OAAO,EAAEN,QAAQ,CAACO,UAAT,EADiC;AAE1CC,UAAAA,gBAAgB,EAAEC,QAFwB;AAG1CC,UAAAA,aAAa,EAAED,QAH2B;AAI1Cb,UAAAA,cAAc,EAAE;AAAA,mBAAM,IAAN;AAAA;AAJ0B,SAAtC,CAAN;AAMD,OAPD,MAOO;AACLK,QAAAA,GAAG,GAAGE,kBAAMC,IAAN,CAAWV,GAAX,EAAgBM,QAAhB,EAA0B;AAC9BM,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WADqB;AAI9BE,UAAAA,gBAAgB,EAAEC,QAJY;AAK9BC,UAAAA,aAAa,EAAED,QALe;AAM9BE,UAAAA,WAAW,EAAEF,QANiB;AAO9Bb,UAAAA,cAAc,EAAE;AAAA,mBAAM,IAAN;AAAA;AAPc,SAA1B,CAAN;AASD;;AAED,aAAOK,GAAG,CAACJ,IAAJ,CAAS,UAAAC,GAAG,EAAI;AACrB,YAAI,OAAOA,GAAG,CAACC,IAAX,KAAoB,QAAxB,EACE,MAAM,IAAIT,gBAAJ,CAAqBQ,GAAG,CAACC,IAAzB,CAAN;AACF,eAAOD,GAAG,CAACC,IAAX;AACD,OAJM,CAAP;AAKD;;;;;;AAGI,IAAMa,YAAY,GAAG,IAAInB,YAAJ,EAArB","sourcesContent":["import axios from 'axios'\r\nimport { runningInNode } from './helper'\r\n\r\nclass InvalidJSONError extends Error {\r\n  constructor(responseData) {\r\n    super(\"The server was expected to respond with JSON, but didn't. This might be because you used \" +\r\n          \"an invalid endpoint URL, an invalid HTTP method, or due to an internal server error. Response:\\n\" +\r\n          responseData)\r\n  }\r\n}\r\n\r\nclass FetchService {\r\n  callApi (url, method) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      validateStatus: () => true,\r\n    })\r\n    .then(res => {\r\n      if (typeof res.data === 'string')\r\n        throw new InvalidJSONError(res.data)\r\n      return res.data\r\n    })\r\n  }\r\n\r\n  uploadFile (formData, url) {\r\n    let req\r\n\r\n    if (runningInNode) {\r\n      req = axios.post(url, formData.getBuffer(), {\r\n        headers: formData.getHeaders(),\r\n        maxContentLength: Infinity,\r\n        maxBodyLength: Infinity,\r\n        validateStatus: () => true,\r\n      })\r\n    } else {\r\n      req = axios.post(url, formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        },\r\n        maxContentLength: Infinity,\r\n        maxBodyLength: Infinity,\r\n        maxDataSize: Infinity,\r\n        validateStatus: () => true,\r\n      })\r\n    }\r\n\r\n    return req.then(res => {\r\n      if (typeof res.data === 'string')\r\n        throw new InvalidJSONError(res.data)\r\n      return res.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const fetchService = new FetchService()\r\n"],"file":"fetch.js"}